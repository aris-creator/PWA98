// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders the correct tree 1`] = `
<form
  onKeyDown={[Function]}
  onReset={[Function]}
  onSubmit={[Function]}
>
  <h2>
    <mock-FormattedMessage
      defaultMessage="Create an Account"
      id="createAccount.createAccountText"
    />
  </h2>
  <div>
    <label>
      First Name
    </label>
    <span
      style={
        Object {
          "--iconsAfter": 0,
          "--iconsBefore": 0,
        }
      }
    >
      <span>
        <input
          autoComplete="given-name"
          id="5c253e16-c4a1-4c04-bfe9-0d061fd1ced3"
          name="customer.firstname"
          onBlur={[Function]}
          onChange={[Function]}
          value=""
        />
      </span>
      <span />
      <span />
    </span>
    <p />
  </div>
  <div>
    <label>
      Last Name
    </label>
    <span
      style={
        Object {
          "--iconsAfter": 0,
          "--iconsBefore": 0,
        }
      }
    >
      <span>
        <input
          autoComplete="family-name"
          id="b3727614-d155-4962-a7cc-d12d1e47c92c"
          name="customer.lastname"
          onBlur={[Function]}
          onChange={[Function]}
          value=""
        />
      </span>
      <span />
      <span />
    </span>
    <p />
  </div>
  <div>
    <label>
      Email
    </label>
    <span
      style={
        Object {
          "--iconsAfter": 0,
          "--iconsBefore": 0,
        }
      }
    >
      <span>
        <input
          autoComplete="email"
          id="320aa373-d60a-4122-95b7-2057eb3f7bbc"
          name="customer.email"
          onBlur={[Function]}
          onChange={[Function]}
          value=""
        />
      </span>
      <span />
      <span />
    </span>
    <p />
  </div>
  <div>
    <label>
      Password
    </label>
    <span
      style={
        Object {
          "--iconsAfter": 1,
          "--iconsBefore": 0,
        }
      }
    >
      <span>
        <input
          autoComplete="new-password"
          id="e461c63e-1c30-48bc-81b2-a6871c928478"
          name="password"
          onBlur={[Function]}
          onChange={[Function]}
          type="password"
          value=""
        />
      </span>
      <span />
      <span>
        <button
          disabled={false}
          onClick={[Function]}
          type="button"
        >
          <span>
            <svg
              fill="none"
              height="24"
              stroke="currentColor"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth="2"
              viewBox="0 0 24 24"
              width="24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24"
              />
              <line
                x1="1"
                x2="23"
                y1="1"
                y2="23"
              />
            </svg>
          </span>
        </button>
      </span>
    </span>
    <p />
  </div>
  <div>
    <label
      htmlFor="0e4057aa-4e7c-4f57-b084-55662496c13e"
    >
      <input
        checked={false}
        id="0e4057aa-4e7c-4f57-b084-55662496c13e"
        name="subscribe"
        onBlur={[Function]}
        onChange={[Function]}
        type="checkbox"
      />
      <span>
        <svg
          fill="none"
          height="24"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth="2"
          viewBox="0 0 24 24"
          width="24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <rect
            height="18"
            rx="2"
            ry="2"
            width="18"
            x="3"
            y="3"
          />
        </svg>
      </span>
      <span>
        Subscribe to news and updates
      </span>
    </label>
    <p />
  </div>
  <div>
    <button
      disabled={false}
      type="submit"
    >
      <span>
        <mock-FormattedMessage
          defaultMessage="Create an Account"
          id="createAccount.createAccountText"
        />
      </span>
    </button>
  </div>
</form>
`;

exports[`should not render cancel button if isCancelButtonHidden is true 1`] = `
<form
  onKeyDown={[Function]}
  onReset={[Function]}
  onSubmit={[Function]}
>
  <h2>
    <mock-FormattedMessage
      defaultMessage="Create an Account"
      id="createAccount.createAccountText"
    />
  </h2>
  <div>
    <label>
      First Name
    </label>
    <span
      style={
        Object {
          "--iconsAfter": 0,
          "--iconsBefore": 0,
        }
      }
    >
      <span>
        <input
          autoComplete="given-name"
          id="53961775-921f-40d3-8bd8-34c1f2d9b906"
          name="customer.firstname"
          onBlur={[Function]}
          onChange={[Function]}
          value=""
        />
      </span>
      <span />
      <span />
    </span>
    <p />
  </div>
  <div>
    <label>
      Last Name
    </label>
    <span
      style={
        Object {
          "--iconsAfter": 0,
          "--iconsBefore": 0,
        }
      }
    >
      <span>
        <input
          autoComplete="family-name"
          id="39b2508c-6d5b-4bf3-ad2c-87f71da94f21"
          name="customer.lastname"
          onBlur={[Function]}
          onChange={[Function]}
          value=""
        />
      </span>
      <span />
      <span />
    </span>
    <p />
  </div>
  <div>
    <label>
      Email
    </label>
    <span
      style={
        Object {
          "--iconsAfter": 0,
          "--iconsBefore": 0,
        }
      }
    >
      <span>
        <input
          autoComplete="email"
          id="d22c3708-b06b-47e5-a9d1-bc5cc172362f"
          name="customer.email"
          onBlur={[Function]}
          onChange={[Function]}
          value=""
        />
      </span>
      <span />
      <span />
    </span>
    <p />
  </div>
  <div>
    <label>
      Password
    </label>
    <span
      style={
        Object {
          "--iconsAfter": 1,
          "--iconsBefore": 0,
        }
      }
    >
      <span>
        <input
          autoComplete="new-password"
          id="ba4cc1a6-80ff-4e9b-a0e0-ed238f2800ed"
          name="password"
          onBlur={[Function]}
          onChange={[Function]}
          type="password"
          value=""
        />
      </span>
      <span />
      <span>
        <button
          disabled={false}
          onClick={[Function]}
          type="button"
        >
          <span>
            <svg
              fill="none"
              height="24"
              stroke="currentColor"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth="2"
              viewBox="0 0 24 24"
              width="24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24"
              />
              <line
                x1="1"
                x2="23"
                y1="1"
                y2="23"
              />
            </svg>
          </span>
        </button>
      </span>
    </span>
    <p />
  </div>
  <div>
    <label
      htmlFor="3979bb98-e4a8-4fb9-bcff-9b03aa4db192"
    >
      <input
        checked={false}
        id="3979bb98-e4a8-4fb9-bcff-9b03aa4db192"
        name="subscribe"
        onBlur={[Function]}
        onChange={[Function]}
        type="checkbox"
      />
      <span>
        <svg
          fill="none"
          height="24"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth="2"
          viewBox="0 0 24 24"
          width="24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <rect
            height="18"
            rx="2"
            ry="2"
            width="18"
            x="3"
            y="3"
          />
        </svg>
      </span>
      <span>
        Subscribe to news and updates
      </span>
    </label>
    <p />
  </div>
  <div>
    <button
      disabled={false}
      type="submit"
    >
      <span>
        <mock-FormattedMessage
          defaultMessage="Create an Account"
          id="createAccount.createAccountText"
        />
      </span>
    </button>
  </div>
</form>
`;
